apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.5
version = '0.2.0-SNAPSHOT'
group = 'net.riccardocossu.autodoc'

def isDevBuild
def isCiBuild
def isReleaseBuild

def sonatypeRepositoryUrl

//set build variables based on build type (release, continuous integration, development)
if(hasProperty("release")) {
	isReleaseBuild = true
	sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
	isCiBuild = true
	version += "-SNAPSHOT"
	sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
	isDevBuild = true
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Autodoc base', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

def slf4j_version = '1.7.5'

dependencies {
    compile (group: 'commons-configuration', name: 'commons-configuration', version: '1.9') {
		exclude module: 'commons-logging'
	}
	compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
	compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'
	compile group: 'org.reflections', name: 'reflections', version: '0.9.9-RC1'
	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.20'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4j_version
	runtime group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.3'
    testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'  
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}
 
task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar

	archives javadocJar
	archives sourcesJar
}



test {
    systemProperties 'property': 'value'
}

//********* artifact signing *********
if(isReleaseBuild) {
    signing {
        sign configurations.archives
    }
} else {
    task signArchives {
        // do nothing
    }
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        }
        else {
            mavenDeployer {
                if(isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                  authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                   name 'autodoc-base'
                   packaging 'jar'
                   description 'AUtodoc is a collection of tools to automate documentation of annotated java classes'
                   url 'https://bitbucket.org/riccardocossu/autodoc'

                   scm {
                       url 'scm:git@bitbucket.org:riccardocossu/autodoc.git'
                       connection 'scm:git@bitbucket.org:riccardocossu/autodoc.git'
                       developerConnection 'scm:git@bitbucket.org:riccardocossu/autodoc.git'
                   }

                   licenses {
                       license {
                           name 'The Apache Software License, Version 2.0'
                           url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                           distribution 'repo'
                       }
                   }

                   developers {
                       developer {
                           id 'riccardocossu'
                           name 'Riccardo Cossu'
                       }
                   }
               }
            }
        }
    }
}

tasks.withType(Compile) {
	options.encoding = 'UTF-8'
}